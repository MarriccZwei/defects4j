diff --git a/src/test/org/apache/commons/lang/LocaleUtilsTest.java b/src/test/org/apache/commons/lang/LocaleUtilsTest.java
index 45aa8e8f2..dc599c741 100644
--- a/src/test/org/apache/commons/lang/LocaleUtilsTest.java
+++ b/src/test/org/apache/commons/lang/LocaleUtilsTest.java
@@ -433,9 +433,9 @@ public class LocaleUtilsTest extends TestCase {
      */
     public void testLanguagesByCountry() {
         assertLanguageByCountry(null, new String[0]);
-        assertLanguageByCountry("GB", new String[]{"en"});
+        assertLanguageByCountry("GB", new String[]{"en", "ga", "gd", "kw", "cy"});
         assertLanguageByCountry("ZZ", new String[0]);
-        assertLanguageByCountry("CH", new String[]{"fr", "de", "it"});
+        assertLanguageByCountry("CH", new String[]{"gsw", "de", "pt", "fr", "rm", "it", "wae", "en"});
     }
 
     //-----------------------------------------------------------------------
@@ -480,9 +480,9 @@ public class LocaleUtilsTest extends TestCase {
      */
     public void testCountriesByLanguage() {
         assertCountriesByLanguage(null, new String[0]);
-        assertCountriesByLanguage("de", new String[]{"DE", "CH", "AT", "LU"});
+        assertCountriesByLanguage("de", new String[]{"IT", "CH", "BE", "LU", "DE", "LI", "AT"});
         assertCountriesByLanguage("zz", new String[0]);
-        assertCountriesByLanguage("it", new String[]{"IT", "CH"});
+        assertCountriesByLanguage("it", new String[]{"VA", "SM", "IT", "CH"});
     }
 
     /**
diff --git a/src/java/org/apache/commons/lang/LocaleUtils.java b/src/java/org/apache/commons/lang/LocaleUtils.java
index 139d9a7f6..faa2a1777 100644
--- a/src/java/org/apache/commons/lang/LocaleUtils.java
+++ b/src/java/org/apache/commons/lang/LocaleUtils.java
@@ -242,7 +242,7 @@ public class LocaleUtils {
                 for (int i = 0; i < locales.size(); i++) {
                     Locale locale = (Locale) locales.get(i);
                     if (countryCode.equals(locale.getCountry()) &&
-                            locale.getVariant().length() == 0) {
+                            locale.getVariant().length() == 0 && locale.getScript().isEmpty()) {
                         langs.add(locale);
                     }
                 }
@@ -275,6 +275,7 @@ public class LocaleUtils {
                     Locale locale = (Locale) locales.get(i);
                     if (languageCode.equals(locale.getLanguage()) &&
                             locale.getCountry().length() != 0 &&
+                            locale.getScript().isEmpty() &&
                             locale.getVariant().length() == 0) {
                         countries.add(locale);
                     }
